name: Release
on:
  workflow_dispatch:
    inputs:
      bump-type:
        type: choice
        required: true
        options:
        - patch
        - minor
        - major
jobs:
  get-latest-tag:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest tag
      id: get_tag
      uses: actions-ecosystem/action-get-latest-tag@v1

    - name: Save latest tag to file
      run: echo "${{ steps.get_tag.outputs.tag }}" > tag.txt

    - name: Upload tag as artifact
      uses: actions/upload-artifact@v4
      with:
        name: latest-tag
        path: tag.txt

  release:
    runs-on: macos-latest
    needs: get-latest-tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download tag artifact
        uses: actions/download-artifact@v4
        with:
          name: latest-tag

      - name: Save tag
        run: |
          TAG=$(cat tag.txt)
          echo "tag=$TAG" >> $GITHUB_ENV

      - name: Bump and Git Commit
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          BUMP_TYPE=${{ github.event.inputs.bump-type }}
          NEW_VERSION=`ruby .github/scripts/bump.rb $BUMP_TYPE $tag`
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "[$BUMP_TYPE] `git describe --tags --abbrev=0` â†’ $NEW_VERSION"

      - name: Build Release
        run: make release

      - name: Create XCFramework
        run: make createXCFramework

      - name: Git Push
        run: git push origin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Draft
        uses: softprops/action-gh-release@v2.0.2
        with:
          name: ðŸ“Ÿ ByteBuddy ${{ env.NEW_VERSION }}
          draft: true
          generate_release_notes: true
          discussion_category_name: Releases
          fail_on_unmatched_files: true
          tag_name: ${{ env.NEW_VERSION }}
